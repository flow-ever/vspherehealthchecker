html,body{
  padding: 0;
  margin: 0;
  height: 100%;
  font-family: Arial, Helvetica, sans-serif;
  

}
h1{
  font-size: 22px;
}
h2{
  font-size: 18px;
}





#head_memu {

  padding: 0;
  margin: 0;
  border-style: solid 1px #dfdfdf;
}

#nav_head {
  margin: 50px auto;
  height: 40px;
  background-color:#0984e3;
  }         
  #nav_head ul {
  list-style: none;
  margin-left: 50px;
  }           
  #nav_head li {
  display: inline;                
  }           
  #nav_head a {
  line-height: 40px;
  color: #fff;
  text-decoration: none;
  padding: 20px 20px;
  }           
  #nav_head a:hover {
  background-color: #0984e3;
  }


#main_frame{
  display: flex;
  justify-content: start;
  flex-direction: column;
  margin-left: 20px;
  position: absolute;
  top:10px;
  
}

.title{
  position: relative;
  width: 800px;
  height: 100px;
  
  
}

/* .title.img{
  position: absolute;
  width: 120px;
  height: 30px;
  right:10px;
  top:5px

} */

.title .img img{
  position: absolute;
  width: 120px;
  height: 30px;
  right:10px;
  top:5px

}

.title span{
  position:relative ;
  top:30px;
  font-size: 32px;
  font-weight: 900;
  margin-left:20%;

}  

#note{
  background-color: white;
  width: 800px;
  height: 100px;
  padding: 10px;
  border-radius: 5px;
  border: solid 1px #ccc;
  font-size: 14px;
}

p.notetitle{
  font-weight:bolder;
  font-size: 18px;
  padding: 0;
  margin: 0;
}


p.normaltext {
  margin: 0;
  
}

#vcenter_info{
  /* background-color: aliceblue; */
  width: 800px;
  padding: 10px;
  margin-top: 10px;
  margin-bottom: 10px;
  border-radius: 5px;
  border: solid 1px #ccc;
  font-size: 14px;
}

input{
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-bottom: 1px solid #ccc;
  border-radius: 5px;
}
input[type="checkbox"]{
  width: 18px;
  height: 18px;

}

#show_progress{
  margin-top: 60px;
  
}

.logger{
  font-size: 10px;
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  visibility: hidden;
}
.logger_title {
  font-size: 15px;
  font-weight: bold;
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  visibility: hidden;
}

.wrapper {
    display: grid;
    grid-template-columns: 280px 1fr;
    grid-gap: 10px;
    flex-direction: column;

    
    
}

.aside {
    align-self: self-start;
    border-style: solid 1px ;
    width: 250px;
    border-radius: 8px;
    border: solid 1px #dfdfdf;
    margin-left: 2px;
    
}

.main {
    /* background-color:#f0f0f0; */
    margin: 0;
    padding: 4px;
    border: solid 1px #dfdfdf;
    display: flex;
    flex-direction: column;
    border-radius: 8px;
    /* width: calc(100% - 300px); */
    /* width: 100%; */

}



::-webkit-details-marker {
    display: none;
}
::-moz-list-bullet {
    font-size: 0;
    float: left;
}

.tree{
    flex: 1;
    overflow: auto;
    padding: 4px 0;
    position: relative;
    width: 200px;
    height: 100%;
    margin: 0 auto;
    
    
}
.tree summary {
    outline: 0;
    padding-left: 15px;
    list-style: none;
    /* display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden; */
}
.tree summary:not(:only-child){
    background: url("data:image/svg+xml,%3Csvg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.354 2.646A.5.5 0 0 0 4.5 3v6a.5.5 0 0 0 .854.354l3-3a.5.5 0 0 0 0-.708l-3-3z' fill='%23000' fill-opacity='.45'/%3E%3C/svg%3E") 4px center no-repeat;
}
.tree details[open]>summary:not(:only-child){
    background-image: url("data:image/svg+xml,%3Csvg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.354 5.354A.5.5 0 0 0 9 4.5H3a.5.5 0 0 0-.354.854l3 3a.5.5 0 0 0 .708 0l3-3z' fill='%23000' fill-opacity='.45'/%3E%3C/svg%3E");
}
.tree details{
    padding-left: 10px
}
.tree-item{
    display: flex;
    align-items: center;
    height: 30px;
    font-size: 15px;
    line-height: 22px;
    color: rgba(0, 0, 0, 0.85);
    /* padding-left: 200px;
    margin-left: -200px; */
    cursor: default;
}


/* 可以单独使用一层伪元素，然后利用**“不完全绝对定位”**，什么意思呢？设置一个元素为绝对定位，如果只指定一个方向，比如水平方向（left/right），那么该元素的最终表现是水平方向上的表现依赖于第一个定位的父级，垂直方向上不依赖于定位父级，仍然处于默认位置。
在这个例子中，我们可以只指定水平方向上的定位属性，这样可以保证水平方向的尺寸跟随最外层父级，还可以通过z-index改变层级，不遮挡父级小三角，实现如下 */

.tree-item::after{
    content: '';
    position: absolute;
    left: 10px;
    right: 10px;
    height: 38px;
    background: #EEF2FF;
    border-radius: 8px;
    z-index: -1;
    opacity: 0;
    transition: .2s;
}
.tree-item:hover::after{
    opacity: 1;
}
.tree-item::before{
    content: '';
    width: 20px;
    height: 20px;
    flex-shrink: 0;
    margin-right: 8px;
    background: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M.833 3.75c0-.92.746-1.667 1.667-1.667h5.417c.247 0 .481.11.64.3l1.833 2.2h7.11c.92 0 1.667.747 1.667 1.667v10c0 .92-.747 1.667-1.667 1.667h-15c-.92 0-1.667-.746-1.667-1.667V3.75zm6.693 0H2.5v4.584h15V6.25H10a.833.833 0 0 1-.64-.3l-1.834-2.2zM17.5 10h-15v6.25h15V10z' fill='%23000' fill-opacity='.45'/%3E%3C/svg%3E") center no-repeat;
}
.tree details[open]>summary:not(:only-child)>.tree-item::before{
    background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M7.917 2.083c.247 0 .481.11.64.3l1.833 2.2h5.443c.92 0 1.667.747 1.667 1.667v1.667h.833a.833.833 0 0 1 .817.997l-1.666 8.333a.833.833 0 0 1-.817.67H1.677a.814.814 0 0 1-.157-.013.83.83 0 0 1-.687-.82V3.75c0-.92.746-1.667 1.667-1.667h5.417zM10 6.25a.833.833 0 0 1-.64-.3l-1.834-2.2H2.5v6.564l.441-1.766a.833.833 0 0 1 .809-.631h12.083V6.25H10zm-7.266 10L4.4 9.584h12.916l-1.334 6.666H2.733z' fill='%23000' fill-opacity='.45'/%3E%3C/svg%3E");
}
.table_container {
  margin: 0;
  width:100%;
  display: flex;
  flex-direction: row;
}

.long_table_container {
  width:90%;
  display: flex;
  flex-direction: column;
}

.mid_table_container {
  width:60%;
  display: flex;
  flex-direction: row;
}

.short_table_container {
  width:30%;
  display: flex;
  flex-direction: column;
}


  
  tr:hover{
    background-color: #f4f4fa;
  }
  
  tr:nth-child(even) {
    background-color:aliceblue;
  }
  
  tr:nth-child(even):hover {
    background-color: #74b9ff;
  }



  
  /* @property --progress {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 0%;
  } */
  
  .g-progress {
      margin: auto;
      width: 150px;
      height: 15px;
      border-radius: 20px;
      /* background: linear-gradient(90deg, #0f0, #0ff var(--progress), transparent 0); */
      border: 1px solid #d1d8e0;
      transition: .3s --progress;
      display: flex;
      justify-content: center;
  }
  
  
  .table th{
    /* width:25%; */
    border: #CCCCCC 1px solid;
    font-weight: bold;
    text-align: left;
    font-size: 18px;
    white-space: nowrap;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
  
  
  .table td {
    /* width:25%;  */
    border: #CCCCCC 1px solid;
    font-weight: light;
    text-align: center;
    font-size: 12px;
    white-space: nowrap;
    padding-left: 1rem;
    padding-right: 0.5rem;
  
  }
  
  
.table2 {
    width:90%;
    table-layout: auto;
    margin-left:  10px;
    font-family: Arial, Helvetica, sans-serif;
    font-style:italic;
    border-spacing: 0;
    line-height: 20px;

    /* table-layout: fixed; */
    border-radius: 8px;
    border-style: hidden;
    box-shadow: 0 0 0 1px #eee;
    border: solid 1px #dfdfdf;
    /* overflow: auto;
    display: block; */

    
  }

  .table2 th{
    /* width:25%; */
    /* border: #CCCCCC 1px solid; */
    font-weight: bold;
    text-align: left;
    font-size: 16px;
    white-space: nowrap;
    padding: 0.5rem;
    border-bottom: solid 1px black;
  }
  
  .table2 tr{
    /* width:25%; */
    /* border: #CCCCCC 1px solid; */
    text-align: left;
    /* white-space: nowrap; */
    padding: 0.5rem;
    
  }
  .table2 td {
    /* width:25%;  */
    /* border: #CCCCCC 1px solid; */
    font-weight: light;
    font-size: 12px;
    /* white-space: nowrap; */
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    border-bottom: solid 1px #dfdfdf;
  
  }

.groupheader {
    vertical-align:middle;
    font-size: 20px;
    font-weight: bolder;
    line-height: 40px;
    border: solid 2px #000;
  }
/* .groupheader>td{
  text-align: left;
} */
.narrow {
  text-align: center;
}
.normal {
  text-align: left;
  

}

/*√和×*/


.correct {
    color: #008100;
    font-weight: 200;
    width: 20px;
    height: 20px;
    background-color: #0f0;
    border: #94a0b4 solid 1px;
    text-align: center;

}
.incorrect {
  background: crimson;
  font-weight: 200;
  width: 20px;
  height: 20px;
  border: #94a0b4 solid 1px;
  text-align: center;
}

.warnning {
  background: yellow;
  font-weight: 200;
  width: 20px;
  height: 20px;
  border: #94a0b4 solid 1px;
  text-align: center;
}


/* for chrome */
.details-1 ::-webkit-details-marker { 
    /* direction: ltr; color: gray; margin-left: .5ch;  */
    display: none;
} 

/* for firefox */
.details-1 ::-moz-list-bullet { 
    /* direction: ltr; color: gray; margin-left: .5ch;  */
    font-size: 0;
}

.details-1 summary::after { 
    content: ''; 
    position: absolute; 
    width: 1em; 
    height: 1em; 
    margin: .2em 0 0 .5ch; 
    background: url("data:image/svg+xml,%3Csvg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.354 2.646A.5.5 0 0 0 4.5 3v6a.5.5 0 0 0 .854.354l3-3a.5.5 0 0 0 0-.708l-3-3z' fill='%23000' fill-opacity='.45'/%3E%3C/svg%3E") 4px center no-repeat; 
    background-size: 100% 100%; 
    transition: transform .2s;

} 
.details-1:not([open]) summary::after { 
    margin-top: .25em; 
    transform: rotate(90deg); 
}


#chart-container {
    font-family: Arial;
    height: 420px;
    border: 2px dashed #aaa;
    border-radius: 5px;
    overflow: auto;
    text-align: center;
  }
  
  .orgchart {
    background: #fff; 
  }
  .orgchart td.left, .orgchart td.right, .orgchart td.top {
    border-color: #aaa;
  }
  .orgchart td>.down {
    background-color: #aaa;
  }
  .orgchart .middle-level .title {
    background-color: #006699;
  }
  .orgchart .middle-level .content {
    border-color: #006699;
  }
  .orgchart .product-dept .title {
    background-color: #009933;
  }
  .orgchart .product-dept .content {
    border-color: #009933;
  }
  .orgchart .rd-dept .title {
    background-color: #993366;
  }
  .orgchart .rd-dept .content {
    border-color: #993366;
  }
  .orgchart .pipeline1 .title {
    background-color: #996633;
  }
  .orgchart .pipeline1 .content {
    border-color: #996633;
  }
  .orgchart .frontend1 .title {
    background-color: #cc0066;
  }
  .orgchart .frontend1 .content {
    border-color: #cc0066;
  }
  
  /* #github-link {
    position: fixed;
    top: 0px;
    right: 10px;
    font-size: 3em;
  } */


/* 组织架构图CSS style */
.cluster_tree ul {
    padding-top: 20px; 
    position: relative;
    
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

.cluster_tree li {
    float: left; text-align: center;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;
    
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.cluster_tree li::before, .cluster_tree li::after{
    content: '';
    position: absolute; top: 0; right: 50%;
    border-top: 1px solid #ccc;
    width: 50%; height: 20px;
}
.cluster_tree li::after{
    right: auto; left: 50%;
    border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without 
any siblings*/
.cluster_tree li:only-child::after, .cluster_tree li:only-child::before {
    display: none;
}

/*Remove space from the top of single children*/
.cluster_tree li:only-child{ padding-top: 0;}

/*Remove left connector from first child and 
right connector from last child*/
.cluster_tree li:first-child::before, .cluster_tree li:last-child::after{
    border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.cluster_tree li:last-child::before{
    border-right: 1px solid #ccc;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}
.cluster_tree li:first-child::after{
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.cluster_tree ul ul::before{
    content: '';
    position: absolute; top: 0; left: 50%;
    border-left: 1px solid #ccc;
    width: 0; height: 20px;
}

.cluster_tree li a{
    border: 1px solid #ccc;
    padding: 5px 10px;
    text-decoration: none;
    color: #666;
    font-family: arial, verdana, tahoma;
    font-size: 14px;
    display: inline-block;
    
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/
.cluster_tree li a:hover, .cluster_tree li a:hover+ul li a {
    background: #c8e4f8; color: #000; border: 1px solid #94a0b4;
}
/*Connector styles on hover*/
.cluster_tree li a:hover+ul li::after, 
.cluster_tree li a:hover+ul li::before, 
.cluster_tree li a:hover+ul::before, 
.cluster_tree li a:hover+ul ul::before{
    border-color:  #94a0b4;
}


.dashboard {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap; /*子元素换行*/
  /* justify-content: center;
  align-items:flex-start; */
  width:90%;
  margin-left: 10px;

}

.wedget {
  width:40%;
  /* min-width: calc((100%-20px) / 2);
  max-width: calc((100%-20px) / 2); */
  height: 500px;
  margin-top: 10px;
  margin-left: 5px;
  margin-right: 5px;
  border-radius: 10px;
  flex-shrink: 1;
  background-Color:rgba(208, 208, 208, 0.1)
}


/* 超链接格式 */
a:link { text-decoration: none;color: blue}
a:active { text-decoration:blink}
a:hover { text-decoration:underline;color: red} 
a:visited { text-decoration: none;color: }


.onButton {
  /* margin-top: auto;
  margin-bottom: auto;
  margin-left: auto;
  margin-right: auto; */
  margin: auto;
  border-style: solid;
  border-width: 8px 12px 8px 12px;
  width:0px;
  height: 0px;
  border-color: transparent transparent transparent green;
}

.offButton {
  margin: auto;
  border-style: solid;
  width:20px;
  height: 20px;
  background-color: #ccc;
  border: 0px;
}




  .header {
    position: absolute;
    top:20px;
    margin-left: 20px;
    width: 80px;
    height: 25px;
    background-color:#ccc;
    text-align: center;
    border-radius: 5px;
    z-index: 2;
  }
  .nav {
    --normal-color: #666;  /* 普通色 */
    --active-color: #06e;  /* 高亮色 */
    display: flex;
    justify-content: space-between;
    margin: 0;
    counter-reset: order; /*定义CSS计数器*/
    list-style: none;
    border: #06e solid 1px;
    height: 60px;
    position: absolute;
    top: 30px;
    width: 80%;
    z-index: 1;
    border-radius: 10px;

  }
  .nav>li{
    color: var(--active-color);
    flex:auto; /* 弹性宽度（根据其内容来调整） */
    display: inline-flex;  /* 内联块级弹性伸缩盒子 */
    align-items: center;
    counter-increment: order;
  }

 
  .nav>li::before {
    content:counter(order);
    display: inline-block;
    width: 1.2em;
    line-height: 1.2em;
    vertical-align: middle;
    margin-right: 0.5em;
    text-align: center;
    /* border-radius: 50%; */
    border-top-left-radius: 50%;
    border:1px solid;
    flex-shrink: 0;
  }
  .nav>li:not(:last-child)::after {
    content: '';
    display: inline-block; 
    flex:1;
    border-bottom: 1px solid #ccc;
    opacity: .6;
  }
  .nav>li:last-child{
    flex:none;
    margin-right: 1em;
  }

  .nav>.active{
    color: var(--active-color);
  }
  .nav>.active::before{
    color: #fff;
    background-color: var(--active-color);
    border-color: var(--active-color);
  }

  .nav>.active~li,.nav>.active::after{
    color: var(--normal-color);
  }



.vmlist{
  display: flex; 
  flex-wrap: wrap;
}

.vm_container {
  margin: 1px;
  display: flex;
  flex-direction: column;
  background-color:  white;
  border: solid 2px #EEF2FF;
  width: 200px;
  height: 100px;
  text-align: center;
  overflow: hidden;
  word-break:break-all;
  border-radius: 8px;
  
}

.vm_container:hover{
  background-color: #dfdfdf;
}

.vm_name{
  height: 40px; 
  margin-top: 0;
  border-radius: 5px;
}

.pass{
  position: relative;
  width: 210px;
  height: 30px;
  border-radius: 5px;
  border-bottom: 1px solid #ccc;
  /* box-shadow: inset 5px 5px 10px rgba(204, 197, 197,.5),
              inset -5px -5px 8px rgba(204, 197, 197,.5); */
  background-color: white;

}

.pass input {
  position: absolute;
  /* top: 5px; */
  bottom: 0px;
  left: px;
  height: 20px;
  width: 180px;
  font-size: 18px;
  outline: none;
  border: none;
  /* background-color:transparent;  */
  background-color:white; 


}


.pass input::placeholder{
  color: rgba(68, 67, 67,.8);
  font-size: 14px;
}

.eye {
  position: absolute;
  margin-right: 5px;
  top: 5px;
  right: 5px;
  width: 25px;
  height: 25px;
  background-image: url(./image/closeEye.svg);
  background-size: 100% 100%;   
  cursor: pointer;
  background-color: white;
}

.eye.reveal {

  background-image: url(./image/openeye.svg);
  background-size: 100% 100%;   

}
